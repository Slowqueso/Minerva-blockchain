const CreateTaskTestCases = [
  // Valid input cases
  {
    _activityID: 1,
    _assignee: "0x123...",
    _title: "Task title",
    _description: "Task description",
    _rewardInD: 50,
    _dueInDays: 3,
    _creditScoreReward: 10,
    msgValue: 500000000000000000,
  },
  {
    _activityID: 2,
    _assignee: "0x456...",
    _description: "Another task description",
    _rewardInD: 100,
    _dueInDays: 7,
    _creditScoreReward: 20,
    msgValue: 1000000000000000000,
  },

  // Invalid input cases with expected error messages
  {
    _activityID: 0,
    _assignee: "0x789...",
    _title: "Task title",
    _description: "Task description",
    _rewardInD: 50,
    _dueInDays: 3,
    _creditScoreReward: 10,
    expectedError: "Activity Does not exist",
  },
  {
    _activityID: 1,
    _assignee: "0xabc...",
    _title: "Task title",
    _description: "",
    _rewardInD: 50,
    _dueInDays: 3,
    _creditScoreReward: 10,
    expectedError: "You are not allowed to perform this task!",
  },
  {
    _activityID: 1,
    _assignee: "0xdef...",
    _title: "Task title",
    _description: "Task description",
    _rewardInD: 50,
    _dueInDays: 3,
    _creditScoreReward: 10,
    expectedError: "Assignee must be a member of the Activity",
  },
  {
    _activityID: 5,
    _assignee: "0x123...",
    _description: "Task description",
    _rewardInD: 50,
    _dueInDays: 3,
    _creditScoreReward: 0,
    expectedError: "Credit score reward must be greater than zero",
  },
  {
    _activityID: 6,
    _assignee: "0x123...",
    _description: "Task description",
    _rewardInD: 50,
    _dueInDays: 3,
    _creditScoreReward: 10,
    msgValue: 0,
    expectedError: "Reward money must be greater than zero",
  },
  {
    _activityID: 7,
    _assignee: "0x123...",
    _description: "Task description",
    _rewardInD: 50,
    _dueInDays: 3,
    _creditScoreReward: 10,
    expectedError: "Assignee must be a registered user",
  },
];

module.exports = CreateTaskTestCases;
